import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import abi from "../engine/contract.json";
import {rinkcontract, rinkrpc} from "../engine/configurtion";
import Web3 from 'web3';
import Web3Modal from "web3modal";
import { useEffect } from 'react';
import ethers from "ethers";

import data from "./data"
export default function Home() {
  const publicAddress = "0x857D7De803e6C5B3CDE0b5Ba02fbd4978685f2ad";
  useEffect(() => {
     connectUser()
    // creatVoucher()
  }, [])

  async function connectUser() {
    // const web3Modal = new Web3Modal()
    // const connection = await web3Modal.connect()
    // const provider = new ethers.providers.Web3Provider(connection);
    // const signer = provider.getSigner();
    // console.log(signer);
    if (window.ethereum) {
      await window.ethereum.request({ method: "eth_requestAccounts" });
      var web3 = new Web3(window.ethereum);
      //await window.ethereum.send("eth_requestAccounts");
      var accounts = await web3.eth.getAccounts();
      var account = accounts[0];
      console.log(account);
    }
    //getUser(account);
    }
     const creatVoucher = async (batchMint) => {
      const web3 = new Web3(window.ethereum);

     // const publicAddress = await connectMetamask();
      try {
        await web3.currentProvider.sendAsync(
          {
            method: "eth_signTypedData_v4",
            params: [publicAddress, JSON.stringify(data)],
            from: publicAddress,
          },
          function (err, result) {
            if (result?.error) {
              alert(result.error.message);
            }
            console.log(result, "result");
            console.log(result.result.substring(2), "signature");
    
          }
        );
      } catch (err) {
        console.log(err, "error");
      }
    };
    

    async function redeem(batchMint) {

      var web3 = new Web3(window.ethereum);
      // var cont = new web3.eth.Contract(abi, rinkcontract);
      // await cont.redeem( );
      //////////
      try {
        //let web3 = await getWeb3();
        // const publicAddress = await connectMetamask();
    
        const contractM = new web3.eth.Contract(
          abi,
          // "0x043F1FD137AFdDb66b0c31fAa1D3E96f720EaE2f"
          rinkcontract
        );
        let result = await contractM.methods
          .redeem("0xe4E51db0FA8586Ba37ab32DC044640e2cd155E10", {
            tokenId: 12,
            uri: "https://gateway.pinata.cloud/ipfs/QmVmCVj7ZbgP94uL74ek7RfqYUBVjdcRvQkZdmp5EmPw8p",
            minPrice: 0,
            amount:4,
            signature:
              "0x4ee44d4a68c9d7ba213c518ceccd340cdd3a9707004186eb37ef1d5647046f251e4daba7f4f505366d03e647f127a4fea817877bdfd95af42c426b45988e6e4d1b",
          })
          .send({ from: "0xe4E51db0FA8586Ba37ab32DC044640e2cd155E10" });
        console.log(result, "result");
      } catch (err) {
        console.log(err, "error==>");
      }
    



    }
  return (
    <div className={styles.container}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>


      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href="https://nextjs.org">Next.js!</a>
        </h1>

        <p className={styles.description}>
          Get started by editing{' '}
          <code className={styles.code}>pages/index.js</code>
        </p>

        <button color="gradient" style={{ fontSize: '20px' }} onClick={() => connectUser}>conectWallet</button>
        <button color="gradient" style={{ fontSize: '20px' }} onClick={() => creatVoucher(true)}>create voucher</button>
        <button color="gradient" style={{ fontSize: '20px' }} onClick={() => redeem(true)}>redeem</button>

       
      </main>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  )
}
